README
 Created on: Jun 30, 2015
     Author: Peizun Liu
     
USAGE:
	 
	./fws -f <source.ttd> -n <initial threads> -s <spawn transitions> --reach-ts

OPTIONS:
            -h: print short help message and return to caller, ignoring rest of line (a switch)
        --help: print long  help message and return to caller, ignoring rest of line (a switch)
            -f: input file (if given, don't specify s,l,e), with no specified range and default value "X"
            -n: number of threads at the initial state, with no specified range and default value "1"
            -s: maximum times of spawn transitions fired, with no specified range and default value "0"
            -i: the initial thread state, with no specified range and default value "0|0"
    --adj-list: whether to print the adjacency list (a switch)
    --cmd-line: whether to print the command line (a switch)
    --reach-ts: whether to print all reachable thread states (a switch)
  --unreach-ts: whether to print all unreachable thread states (a switch)
   --statistic: whether to print the statistic information (a switch)
         --all: whether to print all of the above (a switch)
         
spawn transition: the semantic implemented in this tool as follows:
	suppose that (s|l1, ..., ln) -> (s'|l'1, ..., l'n'), n' = n + 1 and there exist (s,l) +> (s',l') and i 
	such that li = l, for all j < n', lj = l'j, and l'n' = l'.
	
	The spawn transition operations are implemented in the following Function:
	
	1. file fws.cc
	void FWS::standard_FWS(const adjacency_list& TTD, const size_p& n, const size_p& s){
		...
	}
	
	Locals FWS::update_counter(const Locals &Z, const Local_State &dec, const Local_State &inc, const bool &is_spawn){
		...
	}
	
	/**
	 * @brief determine if (src, dst) correpsonds to a spawn transition
	 * @param src
	 * @param dst
	 * @param spawn_trans
	 * @return bool
	 * 			true : src +> dst
	 * 			false: otherwise
	 */
	bool Util::is_spawn_transition(const Thread_State& src, const Thread_State& dst){
		...
	}
	